/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package pe.edu.aprolab.marco.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import pe.edu.aprolab.marco.model.CarreraProfesional;
import pe.edu.aprolab.marco.model.CarreraProfesionalModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CarreraProfesional service. Represents a row in the &quot;MARCO_CarreraProfesional&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link pe.edu.aprolab.marco.model.CarreraProfesionalModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CarreraProfesionalImpl}.
 * </p>
 *
 * @author Diego
 * @see CarreraProfesionalImpl
 * @see pe.edu.aprolab.marco.model.CarreraProfesional
 * @see pe.edu.aprolab.marco.model.CarreraProfesionalModel
 * @generated
 */
public class CarreraProfesionalModelImpl extends BaseModelImpl<CarreraProfesional>
	implements CarreraProfesionalModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a carrera profesional model instance should use the {@link pe.edu.aprolab.marco.model.CarreraProfesional} interface instead.
	 */
	public static final String TABLE_NAME = "MARCO_CarreraProfesional";
	public static final Object[][] TABLE_COLUMNS = {
			{ "carreraProfesionalId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "familiaProfesionalId", Types.BIGINT },
			{ "formacion", Types.INTEGER },
			{ "nombre", Types.VARCHAR },
			{ "descripcion", Types.VARCHAR },
			{ "duracionFechaInicio", Types.TIMESTAMP },
			{ "duracionFechaFin", Types.TIMESTAMP },
			{ "estado", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table MARCO_CarreraProfesional (carreraProfesionalId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,familiaProfesionalId LONG,formacion INTEGER,nombre VARCHAR(75) null,descripcion VARCHAR(75) null,duracionFechaInicio DATE null,duracionFechaFin DATE null,estado INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table MARCO_CarreraProfesional";
	public static final String ORDER_BY_JPQL = " ORDER BY carreraProfesional.nombre ASC";
	public static final String ORDER_BY_SQL = " ORDER BY MARCO_CarreraProfesional.nombre ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.pe.edu.aprolab.marco.model.CarreraProfesional"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.pe.edu.aprolab.marco.model.CarreraProfesional"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.pe.edu.aprolab.marco.model.CarreraProfesional"),
			true);
	public static long NOMBRE_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.pe.edu.aprolab.marco.model.CarreraProfesional"));

	public CarreraProfesionalModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _carreraProfesionalId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCarreraProfesionalId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _carreraProfesionalId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CarreraProfesional.class;
	}

	@Override
	public String getModelClassName() {
		return CarreraProfesional.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("carreraProfesionalId", getCarreraProfesionalId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("familiaProfesionalId", getFamiliaProfesionalId());
		attributes.put("formacion", getFormacion());
		attributes.put("nombre", getNombre());
		attributes.put("descripcion", getDescripcion());
		attributes.put("duracionFechaInicio", getDuracionFechaInicio());
		attributes.put("duracionFechaFin", getDuracionFechaFin());
		attributes.put("estado", getEstado());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long carreraProfesionalId = (Long)attributes.get("carreraProfesionalId");

		if (carreraProfesionalId != null) {
			setCarreraProfesionalId(carreraProfesionalId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long familiaProfesionalId = (Long)attributes.get("familiaProfesionalId");

		if (familiaProfesionalId != null) {
			setFamiliaProfesionalId(familiaProfesionalId);
		}

		Integer formacion = (Integer)attributes.get("formacion");

		if (formacion != null) {
			setFormacion(formacion);
		}

		String nombre = (String)attributes.get("nombre");

		if (nombre != null) {
			setNombre(nombre);
		}

		String descripcion = (String)attributes.get("descripcion");

		if (descripcion != null) {
			setDescripcion(descripcion);
		}

		Date duracionFechaInicio = (Date)attributes.get("duracionFechaInicio");

		if (duracionFechaInicio != null) {
			setDuracionFechaInicio(duracionFechaInicio);
		}

		Date duracionFechaFin = (Date)attributes.get("duracionFechaFin");

		if (duracionFechaFin != null) {
			setDuracionFechaFin(duracionFechaFin);
		}

		Integer estado = (Integer)attributes.get("estado");

		if (estado != null) {
			setEstado(estado);
		}
	}

	@Override
	public long getCarreraProfesionalId() {
		return _carreraProfesionalId;
	}

	@Override
	public void setCarreraProfesionalId(long carreraProfesionalId) {
		_carreraProfesionalId = carreraProfesionalId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getFamiliaProfesionalId() {
		return _familiaProfesionalId;
	}

	@Override
	public void setFamiliaProfesionalId(long familiaProfesionalId) {
		_familiaProfesionalId = familiaProfesionalId;
	}

	@Override
	public int getFormacion() {
		return _formacion;
	}

	@Override
	public void setFormacion(int formacion) {
		_formacion = formacion;
	}

	@Override
	public String getNombre() {
		if (_nombre == null) {
			return StringPool.BLANK;
		}
		else {
			return _nombre;
		}
	}

	@Override
	public void setNombre(String nombre) {
		_columnBitmask = -1L;

		if (_originalNombre == null) {
			_originalNombre = _nombre;
		}

		_nombre = nombre;
	}

	public String getOriginalNombre() {
		return GetterUtil.getString(_originalNombre);
	}

	@Override
	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	@Override
	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	@Override
	public Date getDuracionFechaInicio() {
		return _duracionFechaInicio;
	}

	@Override
	public void setDuracionFechaInicio(Date duracionFechaInicio) {
		_duracionFechaInicio = duracionFechaInicio;
	}

	@Override
	public Date getDuracionFechaFin() {
		return _duracionFechaFin;
	}

	@Override
	public void setDuracionFechaFin(Date duracionFechaFin) {
		_duracionFechaFin = duracionFechaFin;
	}

	@Override
	public int getEstado() {
		return _estado;
	}

	@Override
	public void setEstado(int estado) {
		_estado = estado;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CarreraProfesional.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CarreraProfesional toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CarreraProfesional)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CarreraProfesionalImpl carreraProfesionalImpl = new CarreraProfesionalImpl();

		carreraProfesionalImpl.setCarreraProfesionalId(getCarreraProfesionalId());
		carreraProfesionalImpl.setCompanyId(getCompanyId());
		carreraProfesionalImpl.setUserId(getUserId());
		carreraProfesionalImpl.setUserName(getUserName());
		carreraProfesionalImpl.setCreateDate(getCreateDate());
		carreraProfesionalImpl.setModifiedDate(getModifiedDate());
		carreraProfesionalImpl.setFamiliaProfesionalId(getFamiliaProfesionalId());
		carreraProfesionalImpl.setFormacion(getFormacion());
		carreraProfesionalImpl.setNombre(getNombre());
		carreraProfesionalImpl.setDescripcion(getDescripcion());
		carreraProfesionalImpl.setDuracionFechaInicio(getDuracionFechaInicio());
		carreraProfesionalImpl.setDuracionFechaFin(getDuracionFechaFin());
		carreraProfesionalImpl.setEstado(getEstado());

		carreraProfesionalImpl.resetOriginalValues();

		return carreraProfesionalImpl;
	}

	@Override
	public int compareTo(CarreraProfesional carreraProfesional) {
		int value = 0;

		value = getNombre().compareTo(carreraProfesional.getNombre());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CarreraProfesional)) {
			return false;
		}

		CarreraProfesional carreraProfesional = (CarreraProfesional)obj;

		long primaryKey = carreraProfesional.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CarreraProfesionalModelImpl carreraProfesionalModelImpl = this;

		carreraProfesionalModelImpl._originalNombre = carreraProfesionalModelImpl._nombre;

		carreraProfesionalModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CarreraProfesional> toCacheModel() {
		CarreraProfesionalCacheModel carreraProfesionalCacheModel = new CarreraProfesionalCacheModel();

		carreraProfesionalCacheModel.carreraProfesionalId = getCarreraProfesionalId();

		carreraProfesionalCacheModel.companyId = getCompanyId();

		carreraProfesionalCacheModel.userId = getUserId();

		carreraProfesionalCacheModel.userName = getUserName();

		String userName = carreraProfesionalCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			carreraProfesionalCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			carreraProfesionalCacheModel.createDate = createDate.getTime();
		}
		else {
			carreraProfesionalCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			carreraProfesionalCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			carreraProfesionalCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		carreraProfesionalCacheModel.familiaProfesionalId = getFamiliaProfesionalId();

		carreraProfesionalCacheModel.formacion = getFormacion();

		carreraProfesionalCacheModel.nombre = getNombre();

		String nombre = carreraProfesionalCacheModel.nombre;

		if ((nombre != null) && (nombre.length() == 0)) {
			carreraProfesionalCacheModel.nombre = null;
		}

		carreraProfesionalCacheModel.descripcion = getDescripcion();

		String descripcion = carreraProfesionalCacheModel.descripcion;

		if ((descripcion != null) && (descripcion.length() == 0)) {
			carreraProfesionalCacheModel.descripcion = null;
		}

		Date duracionFechaInicio = getDuracionFechaInicio();

		if (duracionFechaInicio != null) {
			carreraProfesionalCacheModel.duracionFechaInicio = duracionFechaInicio.getTime();
		}
		else {
			carreraProfesionalCacheModel.duracionFechaInicio = Long.MIN_VALUE;
		}

		Date duracionFechaFin = getDuracionFechaFin();

		if (duracionFechaFin != null) {
			carreraProfesionalCacheModel.duracionFechaFin = duracionFechaFin.getTime();
		}
		else {
			carreraProfesionalCacheModel.duracionFechaFin = Long.MIN_VALUE;
		}

		carreraProfesionalCacheModel.estado = getEstado();

		return carreraProfesionalCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{carreraProfesionalId=");
		sb.append(getCarreraProfesionalId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", familiaProfesionalId=");
		sb.append(getFamiliaProfesionalId());
		sb.append(", formacion=");
		sb.append(getFormacion());
		sb.append(", nombre=");
		sb.append(getNombre());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", duracionFechaInicio=");
		sb.append(getDuracionFechaInicio());
		sb.append(", duracionFechaFin=");
		sb.append(getDuracionFechaFin());
		sb.append(", estado=");
		sb.append(getEstado());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("pe.edu.aprolab.marco.model.CarreraProfesional");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>carreraProfesionalId</column-name><column-value><![CDATA[");
		sb.append(getCarreraProfesionalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>familiaProfesionalId</column-name><column-value><![CDATA[");
		sb.append(getFamiliaProfesionalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formacion</column-name><column-value><![CDATA[");
		sb.append(getFormacion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombre</column-name><column-value><![CDATA[");
		sb.append(getNombre());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duracionFechaInicio</column-name><column-value><![CDATA[");
		sb.append(getDuracionFechaInicio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duracionFechaFin</column-name><column-value><![CDATA[");
		sb.append(getDuracionFechaFin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estado</column-name><column-value><![CDATA[");
		sb.append(getEstado());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CarreraProfesional.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CarreraProfesional.class
		};
	private long _carreraProfesionalId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _familiaProfesionalId;
	private int _formacion;
	private String _nombre;
	private String _originalNombre;
	private String _descripcion;
	private Date _duracionFechaInicio;
	private Date _duracionFechaFin;
	private int _estado;
	private long _columnBitmask;
	private CarreraProfesional _escapedModel;
}